# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: envisproto/tensors/parameter.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from fedrec.envisproto.commons import id_pb2 as envisproto_dot_commons_dot_id__pb2
from fedrec.envisproto.tensors import torch_tensor_pb2 as envisproto_dot_tensors_dot_torch__tensor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='envisproto/tensors/parameter.proto',
  package='envisproto.tensors',
  syntax='proto3',
  serialized_options=_b('\n ai.nimbleedge.envisproto.tensors'),
  serialized_pb=_b('\n\"envisproto/tensors/parameter.proto\x12\x12\x65nvisproto.tensors\x1a\x1b\x65nvisproto/commons/id.proto\x1a%envisproto/tensors/torch_tensor.proto\"\xa6\x01\n\tParameter\x12\"\n\x02id\x18\x01 \x01(\x0b\x32\x16.envisproto.commons.Id\x12/\n\x06tensor\x18\x02 \x01(\x0b\x32\x1f.envisproto.tensors.TorchTensor\x12\x15\n\rrequires_grad\x18\x03 \x01(\x08\x12-\n\x04grad\x18\x04 \x01(\x0b\x32\x1f.envisproto.tensors.TorchTensorB\"\n ai.nimbleedge.envisproto.tensorsb\x06proto3')
  ,
  dependencies=[envisproto_dot_commons_dot_id__pb2.DESCRIPTOR,envisproto_dot_tensors_dot_torch__tensor__pb2.DESCRIPTOR,])




_PARAMETER = _descriptor.Descriptor(
  name='Parameter',
  full_name='envisproto.tensors.Parameter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='envisproto.tensors.Parameter.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tensor', full_name='envisproto.tensors.Parameter.tensor', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='requires_grad', full_name='envisproto.tensors.Parameter.requires_grad', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='grad', full_name='envisproto.tensors.Parameter.grad', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=127,
  serialized_end=293,
)

_PARAMETER.fields_by_name['id'].message_type = envisproto_dot_commons_dot_id__pb2._ID
_PARAMETER.fields_by_name['tensor'].message_type = envisproto_dot_tensors_dot_torch__tensor__pb2._TORCHTENSOR
_PARAMETER.fields_by_name['grad'].message_type = envisproto_dot_tensors_dot_torch__tensor__pb2._TORCHTENSOR
DESCRIPTOR.message_types_by_name['Parameter'] = _PARAMETER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Parameter = _reflection.GeneratedProtocolMessageType('Parameter', (_message.Message,), dict(
  DESCRIPTOR = _PARAMETER,
  __module__ = 'envisproto.tensors.parameter_pb2'
  # @@protoc_insertion_point(class_scope:envisproto.tensors.Parameter)
  ))
_sym_db.RegisterMessage(Parameter)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
